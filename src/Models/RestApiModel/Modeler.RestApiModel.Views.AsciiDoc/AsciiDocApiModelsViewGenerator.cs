using System.Text;

namespace Modeler.RestApiModel.Views.AsciiDoc;

public class AsciiDocApiModelsViewGenerator
{
    private readonly IAsciiDocRestApiViewsOutput<AsciiDocApiModelsView> _viewsOutput;

    public AsciiDocApiModelsViewGenerator(IAsciiDocRestApiViewsOutput<AsciiDocApiModelsView> viewsOutput)
    {
        _viewsOutput = viewsOutput;
    }

    public void Generate(List<AsciiDocApiModelsView> views)
    {
        var outputItems = new List<AsciiDocRestApiViewsOutputItem<AsciiDocApiModelsView>>();
        foreach (var view in views)
        {
            var sb = new StringBuilder();
            sb.AppendLine("// Generated by Modeler - do not change.");
            foreach (var model in view.Model.GetApiModels())
            {
                sb.AppendLine($"[#rest_api_model_{model.Id}]");
                sb.AppendLine($"=== {model.Name}");
                sb.AppendLine();
                sb.AppendLine("[cols=3*]");
                sb.AppendLine("|===");
                sb.AppendLine("|Name|Type|Required");
                sb.AppendLine();
                foreach (var attr in model.Attributes)
                {
                    sb.AppendLine($"|{attr.Name}");
                    sb.AppendLine($"|{attr.Type.Name}");
                    sb.AppendLine($"|{(attr.Required ? "YES" : "NO")}");
                    sb.AppendLine();
                }
                sb.AppendLine("|===");
                sb.AppendLine();
            }
            outputItems.Add(new AsciiDocRestApiViewsOutputItem<AsciiDocApiModelsView>(view.Id, view, sb.ToString()));
        }
        _viewsOutput.Execute(outputItems);
    }
}
