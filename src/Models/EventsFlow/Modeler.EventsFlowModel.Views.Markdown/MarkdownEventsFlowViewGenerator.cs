using System.Text;

namespace Modeler.EventsFlowModel.Views.Markdown;

public class MarkdownEventsFlowViewGenerator
{
    private readonly IMarkdownEventsFlowViewsOutput<MarkdownEventFlowsView> _viewsOutput;

    public MarkdownEventsFlowViewGenerator(IMarkdownEventsFlowViewsOutput<MarkdownEventFlowsView> viewsOutput)
    {
        _viewsOutput = viewsOutput;
    }

    public void Generate(List<MarkdownEventFlowsView> views)
    {
        var outputItems = new List<MarkdownEventsFlowViewsOutputItem<MarkdownEventFlowsView>>();
        foreach (var view in views)
        {
            var content = Generate(view);
            outputItems.Add(new MarkdownEventsFlowViewsOutputItem<MarkdownEventFlowsView>(view.Id, view, content));
        }
        _viewsOutput.Execute(outputItems);
    }

    private string Generate(MarkdownEventFlowsView view)
    {
        var sb = new StringBuilder();
        sb.AppendLine("<!-- Generated by Modeler - do not change. -->");
        sb.AppendLine("|Item|Triggered by|Triggers|");
        sb.AppendLine("|---|---|---|");

        var model = view.Model;

        foreach (var command in model.GetCommands())
        {
            var triggeredBy = string.Join("<br>", model.GetEvents()
                .Where(e => e.CommandTriggers.Any(ct => ct.Command == command))
                .Select(e => $"Event {e.Name}"));

            var triggers = string.Join("<br>", command.EventTriggers.Select(et => $"Event {et.Event.Name}"));

            sb.AppendLine($"|Command {command.Name}|{triggeredBy}|{triggers}|");
        }

        foreach (var @event in model.GetEvents())
        {
            var triggeredBy = string.Join("<br>", model.GetCommands()
                .Where(c => c.EventTriggers.Any(et => et.Event == @event))
                .Select(c => $"Command {c.Name}"));

            var triggers = string.Join("<br>", @event.CommandTriggers.Select(ct => $"Command {ct.Command.Name}"));

            sb.AppendLine($"|Event {@event.Name}|{triggeredBy}|{triggers}|");
        }

        return sb.ToString();
    }
}
