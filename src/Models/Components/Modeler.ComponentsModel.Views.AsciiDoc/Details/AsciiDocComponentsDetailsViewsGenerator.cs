using System.Text;
using Modeler.ComponentsModel.Views.Shared;

namespace Modeler.ComponentsModel.Views.AsciiDoc.Details;

public class AsciiDocComponentsDetailsViewsGenerator
{
    private readonly IViewsOutput<AsciiDocComponentDetailsView> _viewsOutput;
    
    private readonly Model _model;

    public AsciiDocComponentsDetailsViewsGenerator(Model model, IViewsOutput<AsciiDocComponentDetailsView> viewsOutput)
    {
        _viewsOutput = viewsOutput;
        _model = model;
    }
    
    public void Generate(
        List<AsciiDocComponentDetailsView> views)
    {
        var outputItems = new List<ViewOutputItem<AsciiDocComponentDetailsView>>();
        foreach (var view in views)
        {
            var content = Generate(view);
            
            outputItems.Add(new ViewOutputItem<AsciiDocComponentDetailsView>(view.Id, view, content));
        }
        
        _viewsOutput.Execute(outputItems);
    }
    
    private string Generate(AsciiDocComponentDetailsView view)
    {
        var sb = new StringBuilder();

        sb.AppendLine("// Generated by Modeler - do not change.");
        
        sb.AppendLine("|===");
        sb.AppendLine("|Relation|Component|Type");
        sb.AppendLine();

        foreach (var subComponent in view.Component.SubComponents)
        {
            sb.AppendLine("|Contains");
            sb.AppendLine($"|{subComponent.Name}");
            sb.AppendLine($"|{subComponent.Type.Name}");
            sb.AppendLine();
        }

        var relationships = _model.GetComponentRelationships(view.Component);

        foreach (var relationship in relationships)
        {
            if (relationship is UsageComponentRelationship usage)
            {
                if (relationship.Source == view.Component)
                {
                    sb.AppendLine("|Use");
                    sb.AppendLine($"|{relationship.Target.Name}");
                    sb.AppendLine($"|{relationship.Target.Type.Name}");
                    sb.AppendLine();
                }
                else if (_model.Contains(view.Component, relationship.Source))
                {
                    sb.AppendLine("|Use");
                    sb.AppendLine($"|{relationship.Target.Name}");
                    sb.AppendLine($"|{relationship.Target.Type.Name}");
                    sb.AppendLine();
                }
                else
                {
                    sb.AppendLine("|Is used by");
                    sb.AppendLine($"|{relationship.Source.Name}");
                    sb.AppendLine($"|{relationship.Source.Type.Name}");
                    sb.AppendLine();
                }
            }
        }
        
        sb.AppendLine("|===");
        
        return sb.ToString();
    }
}